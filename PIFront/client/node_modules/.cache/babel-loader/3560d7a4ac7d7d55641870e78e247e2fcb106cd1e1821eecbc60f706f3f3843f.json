{"ast":null,"code":"import { validCountries } from \"./contries\";\n\n// Valida que el campo \"tour\" no esté vacío\nexport const validateTour = tour => {\n  return tour.trim() !== \"\";\n};\n\n// Valida que el campo \"duration\" sea un número entero positivo\nexport const validateDuration = duration => {\n  return /^[1-9][0-9]*$/.test(duration);\n};\n\n// Valida que cada campo de país no esté vacío y sea un país válido\nexport const validateCountries = countries => {\n  return countries.every(country => {\n    const trimmedCountry = country.trim();\n    return trimmedCountry !== \"\" && validCountries.includes(trimmedCountry);\n  });\n};","map":{"version":3,"names":["validCountries","validateTour","tour","trim","validateDuration","duration","test","validateCountries","countries","every","country","trimmedCountry","includes"],"sources":["D:/Henry/PI_Countries/PIFront/client/src/vallidations/vallidations.js"],"sourcesContent":["import { validCountries } from \"./contries\";\r\n\r\n// Valida que el campo \"tour\" no esté vacío\r\nexport const validateTour = (tour) => {\r\n  return tour.trim() !== \"\";\r\n};\r\n\r\n// Valida que el campo \"duration\" sea un número entero positivo\r\nexport const validateDuration = (duration) => {\r\n  return /^[1-9][0-9]*$/.test(duration);\r\n};\r\n\r\n// Valida que cada campo de país no esté vacío y sea un país válido\r\nexport const validateCountries = (countries) => {\r\n  return countries.every((country) => {\r\n    const trimmedCountry = country.trim();\r\n    return trimmedCountry !== \"\" && validCountries.includes(trimmedCountry);\r\n  });\r\n};"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;;AAE3C;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,OAAOA,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;AAC3B,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,OAAO,eAAe,CAACC,IAAI,CAACD,QAAQ,CAAC;AACvC,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAIC,SAAS,IAAK;EAC9C,OAAOA,SAAS,CAACC,KAAK,CAAEC,OAAO,IAAK;IAClC,MAAMC,cAAc,GAAGD,OAAO,CAACP,IAAI,CAAC,CAAC;IACrC,OAAOQ,cAAc,KAAK,EAAE,IAAIX,cAAc,CAACY,QAAQ,CAACD,cAAc,CAAC;EACzE,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}