{"ast":null,"code":"var _jsxFileName = \"D:\\\\Henry\\\\PI_Countries\\\\PIFRONT_COUNTRIES_PT12B\\\\PIFront\\\\client\\\\src\\\\components\\\\SelectCountries\\\\SelectCountries.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { setCountries } from '../../redux/actions/index';\nimport { continents, validCountries } from \"../../vallidations/contries\"; // Actualizamos el nombre de la variable.\nimport stlSC from \"./SelectCountries.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectCountries = () => {\n  _s();\n  const [selectedContinents, setSelectedContinents] = useState([]);\n  const dispatch = useDispatch();\n  dispatch(setCountries(countries));\n  const handleContinentChange = continent => {\n    if (selectedContinents.includes(continent)) {\n      setSelectedContinents(selectedContinents.filter(c => c !== continent));\n    } else {\n      setSelectedContinents([...selectedContinents, continent]);\n    }\n  };\n  const handleCountryChange = event => {\n    const {\n      value\n    } = event.target;\n    dispatch(setCountriesToCreate(value)); // Envia la acci贸n para actualizar selectedCountries en el store\n    setSelectedContinents(prevSelectedContinents => prevSelectedContinents.includes(value) ? prevSelectedContinents.filter(c => c !== value) : [...prevSelectedContinents, value]);\n    onChange(event); // Llama a la funci贸n onChange pasada como prop para que el componente padre maneje el evento\n  };\n\n  const filteredCountries = validCountries.filter(country => selectedContinents.length === 0 || selectedContinents.includes(country.continent));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stlSC.gnrCont,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: stlSC.divContinents,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Continents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: stlSC.divContinentsUnit,\n        children: continents.map(continent => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: stlSC.boxContinents,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedContinents.includes(continent),\n            onChange: () => handleContinentChange(continent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: continent\n          }, continent, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: stlSC.divCountries,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: stlSC.countBox,\n        children: filteredCountries.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: stlSC.miniBox,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => handleCountryChange(country.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: country.name\n          }, country.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectCountries, \"lW5ZjWx2v1ZIbEy6RPqUCI9DdNM=\", false, function () {\n  return [useDispatch];\n});\n_c = SelectCountries;\nexport default SelectCountries;\nvar _c;\n$RefreshReg$(_c, \"SelectCountries\");","map":{"version":3,"names":["React","useDispatch","setCountries","continents","validCountries","stlSC","jsxDEV","_jsxDEV","SelectCountries","_s","selectedContinents","setSelectedContinents","useState","dispatch","countries","handleContinentChange","continent","includes","filter","c","handleCountryChange","event","value","target","setCountriesToCreate","prevSelectedContinents","onChange","filteredCountries","country","length","className","gnrCont","children","divContinents","fileName","_jsxFileName","lineNumber","columnNumber","divContinentsUnit","map","boxContinents","type","checked","divCountries","countBox","miniBox","name","_c","$RefreshReg$"],"sources":["D:/Henry/PI_Countries/PIFRONT_COUNTRIES_PT12B/PIFront/client/src/components/SelectCountries/SelectCountries.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCountries } from '../../redux/actions/index';\r\nimport { continents, validCountries } from \"../../vallidations/contries\"; // Actualizamos el nombre de la variable.\r\nimport stlSC from \"./SelectCountries.module.css\";\r\n\r\nconst SelectCountries = () => {\r\n  const [selectedContinents, setSelectedContinents] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  dispatch(setCountries(countries));\r\n\r\n  const handleContinentChange = (continent) => {\r\n    if (selectedContinents.includes(continent)) {\r\n      setSelectedContinents(selectedContinents.filter((c) => c !== continent));\r\n    } else {\r\n      setSelectedContinents([...selectedContinents, continent]);\r\n    }\r\n  };\r\n\r\n  const handleCountryChange = (event) => {\r\n    const { value } = event.target;\r\n    dispatch(setCountriesToCreate(value)); // Envia la acci贸n para actualizar selectedCountries en el store\r\n    setSelectedContinents((prevSelectedContinents) =>\r\n      prevSelectedContinents.includes(value)\r\n        ? prevSelectedContinents.filter((c) => c !== value)\r\n        : [...prevSelectedContinents, value]\r\n    );\r\n    onChange(event); // Llama a la funci贸n onChange pasada como prop para que el componente padre maneje el evento\r\n  };\r\n\r\n  const filteredCountries = validCountries.filter(\r\n    (country) =>\r\n      selectedContinents.length === 0 ||\r\n      selectedContinents.includes(country.continent)\r\n  );\r\n\r\n  return (\r\n    <div className={stlSC.gnrCont}>\r\n      <div className={stlSC.divContinents}>\r\n        <h2>Continents</h2>\r\n        <div className={stlSC.divContinentsUnit}>\r\n          {continents.map((continent) => (\r\n            <div className={stlSC.boxContinents}>\r\n              <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedContinents.includes(continent)}\r\n                  onChange={() => handleContinentChange(continent)}\r\n                />\r\n              <label key={continent}>\r\n                {continent}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={stlSC.divCountries}>\r\n        <h2>Countries</h2>\r\n        <div className={stlSC.countBox}>\r\n          {filteredCountries.map((country) => (\r\n            <div className={stlSC.miniBox}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => handleCountryChange(country.name)}\r\n              />\r\n              <label key={country.name}>{country.name}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectCountries;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}