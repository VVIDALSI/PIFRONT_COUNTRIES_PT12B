{"ast":null,"code":"var _jsxFileName = \"D:\\\\Henry\\\\PI_Countries\\\\PIFRONT_COUNTRIES_PT12B\\\\PIFront\\\\client\\\\src\\\\components\\\\SelectCountries\\\\SelectCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport { setCountriesToCreate } from '../../redux/actions/index';\nimport { continents, validCountries } from \"../../vallidations/contries\"; // Actualizamos el nombre de la variable.\nimport stlSC from \"./SelectCountries.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectCountries = ({\n  onChange\n}) => {\n  _s();\n  const [selectedContinents, setSelectedContinents] = useState([]);\n  const dispatch = useDispatch();\n  const handleContinentChange = continent => {\n    if (selectedContinents.includes(continent)) {\n      setSelectedContinents(selectedContinents.filter(c => c !== continent));\n    } else {\n      setSelectedContinents([...selectedContinents, continent]);\n    }\n  };\n  const handleCountryChange = event => {\n    const {\n      value\n    } = event.target;\n    dispatch(setCountriesToCreate(value)); // Envia la acci贸n para actualizar selectedCountries en el store\n    onChange(event); // Llama a la funci贸n onChange pasada como prop para que el componente padre maneje el evento\n  };\n\n  dispatch(setCountriesToCreate);\n  const filteredCountries = validCountries.filter(country => selectedContinents.length === 0 || selectedContinents.includes(country.continent));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stlSC.gnrCont,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: stlSC.divContinents,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Continents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: stlSC.divContinentsUnit,\n        children: continents.map(continent => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: stlSC.boxContinents,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedContinents.includes(continent),\n            onChange: () => handleContinentChange(continent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: continent\n          }, continent, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: stlSC.divCountries,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: stlSC.countBox,\n        children: filteredCountries.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: stlSC.miniBox,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => handleCountryChange(country.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: country.name\n          }, country.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectCountries, \"lW5ZjWx2v1ZIbEy6RPqUCI9DdNM=\", false, function () {\n  return [useDispatch];\n});\n_c = SelectCountries;\nexport default SelectCountries;\nvar _c;\n$RefreshReg$(_c, \"SelectCountries\");","map":{"version":3,"names":["React","useState","useDispatch","setCountriesToCreate","continents","validCountries","stlSC","jsxDEV","_jsxDEV","SelectCountries","onChange","_s","selectedContinents","setSelectedContinents","dispatch","handleContinentChange","continent","includes","filter","c","handleCountryChange","event","value","target","filteredCountries","country","length","className","gnrCont","children","divContinents","fileName","_jsxFileName","lineNumber","columnNumber","divContinentsUnit","map","boxContinents","type","checked","divCountries","countBox","miniBox","name","_c","$RefreshReg$"],"sources":["D:/Henry/PI_Countries/PIFRONT_COUNTRIES_PT12B/PIFront/client/src/components/SelectCountries/SelectCountries.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCountriesToCreate } from '../../redux/actions/index';\r\nimport { continents, validCountries } from \"../../vallidations/contries\"; // Actualizamos el nombre de la variable.\r\nimport stlSC from \"./SelectCountries.module.css\";\r\n\r\nconst SelectCountries = ({ onChange }) => {\r\n  const [selectedContinents, setSelectedContinents] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  const handleContinentChange = (continent) => {\r\n    if (selectedContinents.includes(continent)) {\r\n      setSelectedContinents(selectedContinents.filter((c) => c !== continent));\r\n    } else {\r\n      setSelectedContinents([...selectedContinents, continent]);\r\n    }\r\n  };\r\n\r\n  const handleCountryChange = (event) => {\r\n    const { value } = event.target;\r\n    dispatch(setCountriesToCreate(value)); // Envia la acci贸n para actualizar selectedCountries en el store\r\n    onChange(event); // Llama a la funci贸n onChange pasada como prop para que el componente padre maneje el evento\r\n  };\r\n\r\n  dispatch(setCountriesToCreate);\r\n\r\n  const filteredCountries = validCountries.filter(\r\n    (country) =>\r\n      selectedContinents.length === 0 ||\r\n      selectedContinents.includes(country.continent)\r\n  );\r\n\r\n  return (\r\n    <div className={stlSC.gnrCont}>\r\n      <div className={stlSC.divContinents}>\r\n        <h2>Continents</h2>\r\n        <div className={stlSC.divContinentsUnit}>\r\n          {continents.map((continent) => (\r\n            <div className={stlSC.boxContinents}>\r\n              <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedContinents.includes(continent)}\r\n                  onChange={() => handleContinentChange(continent)}\r\n                />\r\n              <label key={continent}>\r\n                {continent}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={stlSC.divCountries}>\r\n        <h2>Countries</h2>\r\n        <div className={stlSC.countBox}>\r\n          {filteredCountries.map((country) => (\r\n            <div className={stlSC.miniBox}>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => handleCountryChange(country.name)}\r\n              />\r\n              <label key={country.name}>{country.name}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectCountries;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}