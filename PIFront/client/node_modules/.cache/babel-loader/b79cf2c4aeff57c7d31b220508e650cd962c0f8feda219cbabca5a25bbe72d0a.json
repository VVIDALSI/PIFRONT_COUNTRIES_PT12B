{"ast":null,"code":"var _jsxFileName = \"D:\\\\Henry\\\\PI_Countries\\\\PIFront\\\\client\\\\src\\\\views\\\\Detail\\\\Detail.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport stlDetail from \"./Detail.module.css\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"../../components/NavBar/NavBar\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { GET_COUNTRIES } from \"../actions/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = props => {\n  _s();\n  const {\n    id\n  } = useParams();\n  console.log(useParams());\n  console.log(id);\n\n  // Buscar el país en el estado global a través de props\n  const countryFound = props.countries.find(country => country.cca3 === id);\n\n  // Resto del código\n  // ...\n\n  // Si no se encontró el país\n  if (!countryFound) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Pa\\xEDs no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Extraer las propiedades del país encontrado\n  const {\n    name,\n    region,\n    capital,\n    subregion,\n    area,\n    population,\n    flags\n  } = countryFound;\n\n  // Resto del código\n  // ...\n};\n\n// Mapear el estado global a props del componente\n_s(Detail, \"m0llNAGh7al4AuNuAxlteeDwesc=\", false, function () {\n  return [useParams, useParams];\n});\n_c = Detail;\nconst mapStateToProps = state => {\n  return {\n    countries: state.countries\n    // Si tienes más elementos en el estado que necesitas utilizar, agrégales aquí.\n  };\n};\n\n// Conectar el componente con el estado global\nexport default connect(mapStateToProps)(Detail);\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","connect","useParams","stlDetail","Link","NavBar","Footer","GET_COUNTRIES","jsxDEV","_jsxDEV","Detail","props","_s","id","console","log","countryFound","countries","find","country","cca3","children","fileName","_jsxFileName","lineNumber","columnNumber","name","region","capital","subregion","area","population","flags","_c","mapStateToProps","state","$RefreshReg$"],"sources":["D:/Henry/PI_Countries/PIFront/client/src/views/Detail/Detail.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport stlDetail from \"./Detail.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from \"../../components/NavBar/NavBar\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport { GET_COUNTRIES } from \"../actions/index\";\r\n\r\nconst Detail = (props) => {\r\n  const { id } = useParams();\r\n\r\n  console.log(useParams());\r\n  console.log(id);\r\n\r\n  // Buscar el país en el estado global a través de props\r\n  const countryFound = props.countries.find((country) => country.cca3 === id);\r\n\r\n  // Resto del código\r\n  // ...\r\n\r\n  // Si no se encontró el país\r\n  if (!countryFound) {\r\n    return <div>País no encontrado</div>;\r\n  }\r\n\r\n  // Extraer las propiedades del país encontrado\r\n  const {\r\n    name,\r\n    region,\r\n    capital,\r\n    subregion,\r\n    area,\r\n    population,\r\n    flags,\r\n  } = countryFound;\r\n\r\n  // Resto del código\r\n  // ...\r\n};\r\n\r\n// Mapear el estado global a props del componente\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    countries: state.countries,\r\n    // Si tienes más elementos en el estado que necesitas utilizar, agrégales aquí.\r\n  };\r\n};\r\n\r\n// Conectar el componente con el estado global\r\nexport default connect(mapStateToProps)(Detail);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAE1BY,OAAO,CAACC,GAAG,CAACb,SAAS,CAAC,CAAC,CAAC;EACxBY,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;;EAEf;EACA,MAAMG,YAAY,GAAGL,KAAK,CAACM,SAAS,CAACC,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAKP,EAAE,CAAC;;EAE3E;EACA;;EAEA;EACA,IAAI,CAACG,YAAY,EAAE;IACjB,oBAAOP,OAAA;MAAAY,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;;EAEA;EACA,MAAM;IACJC,IAAI;IACJC,MAAM;IACNC,OAAO;IACPC,SAAS;IACTC,IAAI;IACJC,UAAU;IACVC;EACF,CAAC,GAAGhB,YAAY;;EAEhB;EACA;AACF,CAAC;;AAED;AAAAJ,EAAA,CAhCMF,MAAM;EAAA,QACKR,SAAS,EAEZA,SAAS;AAAA;AAAA+B,EAAA,GAHjBvB,MAAM;AAiCZ,MAAMwB,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IACLlB,SAAS,EAAEkB,KAAK,CAAClB;IACjB;EACF,CAAC;AACH,CAAC;;AAED;AACA,eAAehB,OAAO,CAACiC,eAAe,CAAC,CAACxB,MAAM,CAAC;AAAC,IAAAuB,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}