{"ast":null,"code":"var _jsxFileName = \"D:\\\\Henry\\\\PI_Countries\\\\PIFront\\\\client\\\\src\\\\views\\\\Create\\\\countryModal.jsx\";\nimport React from \"react\";\nimport stlCModal from \"./CountryModel.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountryModal = ({\n  countries,\n  selectedCountries,\n  onClose,\n  onSave\n}) => {\n  const handleCheckboxChange = e => {\n    const {\n      value,\n      checked\n    } = e.target;\n    if (checked) {\n      onSave([...selectedCountries, value]);\n    } else {\n      onSave(selectedCountries.filter(country => country !== value));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stlCreate.modalOverlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: stlCreate.modalContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select 10 Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: countries.map(country => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: country,\n            checked: selectedCountries.includes(country),\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), country]\n        }, country, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = CountryModal;\nexport default CountryModal;\nvar _c;\n$RefreshReg$(_c, \"CountryModal\");","map":{"version":3,"names":["React","stlCModal","jsxDEV","_jsxDEV","CountryModal","countries","selectedCountries","onClose","onSave","handleCheckboxChange","e","value","checked","target","filter","country","className","stlCreate","modalOverlay","children","modalContent","fileName","_jsxFileName","lineNumber","columnNumber","map","type","includes","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/Henry/PI_Countries/PIFront/client/src/views/Create/countryModal.jsx"],"sourcesContent":["import React from \"react\";\r\nimport stlCModal from \"./CountryModel.module.css\";\r\n\r\nconst CountryModal = ({ countries, selectedCountries, onClose, onSave }) => {\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    if (checked) {\r\n      onSave([...selectedCountries, value]);\r\n    } else {\r\n      onSave(selectedCountries.filter((country) => country !== value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={stlCreate.modalOverlay}>\r\n      <div className={stlCreate.modalContent}>\r\n        <h2>Select 10 Countries</h2>\r\n        <div>\r\n          {countries.map((country) => (\r\n            <label key={country}>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={country}\r\n                checked={selectedCountries.includes(country)}\r\n                onChange={handleCheckboxChange}\r\n              />\r\n              {country}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryModal;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS;EAAEC,iBAAiB;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAC1E,MAAMC,oBAAoB,GAAIC,CAAC,IAAK;IAClC,MAAM;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAGF,CAAC,CAACG,MAAM;IACnC,IAAID,OAAO,EAAE;MACXJ,MAAM,CAAC,CAAC,GAAGF,iBAAiB,EAAEK,KAAK,CAAC,CAAC;IACvC,CAAC,MAAM;MACLH,MAAM,CAACF,iBAAiB,CAACQ,MAAM,CAAEC,OAAO,IAAKA,OAAO,KAAKJ,KAAK,CAAC,CAAC;IAClE;EACF,CAAC;EAED,oBACER,OAAA;IAAKa,SAAS,EAAEC,SAAS,CAACC,YAAa;IAAAC,QAAA,eACrChB,OAAA;MAAKa,SAAS,EAAEC,SAAS,CAACG,YAAa;MAAAD,QAAA,gBACrChB,OAAA;QAAAgB,QAAA,EAAI;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BrB,OAAA;QAAAgB,QAAA,EACGd,SAAS,CAACoB,GAAG,CAAEV,OAAO,iBACrBZ,OAAA;UAAAgB,QAAA,gBACEhB,OAAA;YACEuB,IAAI,EAAC,UAAU;YACff,KAAK,EAAEI,OAAQ;YACfH,OAAO,EAAEN,iBAAiB,CAACqB,QAAQ,CAACZ,OAAO,CAAE;YAC7Ca,QAAQ,EAAEnB;UAAqB;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,EACDT,OAAO;QAAA,GAPEA,OAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQZ,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrB,OAAA;QAAQ0B,OAAO,EAAEtB,OAAQ;QAAAY,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GA/BI1B,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}