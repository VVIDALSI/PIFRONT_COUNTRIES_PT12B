{"ast":null,"code":"var _jsxFileName = \"D:\\\\Henry\\\\PI_Countries\\\\PIFRONT_COUNTRIES_PT12B\\\\PIFront\\\\client\\\\src\\\\components\\\\SelectCountries\\\\SelectCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { continents, validCountries } from \"../../vallidations/contries\"; // Actualizamos el nombre de la variable.\nimport stlSC from \"./SelectCountries.module.css\";\n// const SelectCountries = ({ selectedCountries, setSelectedCountries, updateSelectedCountries }) => {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectCountries = ({\n  selectedCountriesProp,\n  setSelectedCountriesProp,\n  updateSelectedCountries\n}) => {\n  _s();\n  const [selectedContinents, setSelectedContinents] = useState([]);\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const handleContinentChange = continent => {\n    if (selectedContinents.includes(continent)) {\n      setSelectedContinents(selectedContinents.filter(c => c !== continent));\n    } else {\n      setSelectedContinents([...selectedContinents, continent]);\n    }\n  };\n  const handleCountrySelection = event => {\n    const selectedCountry = event.target.value;\n    setSelectedCountriesProp([...selectedCountriesProp, selectedCountry]);\n    updateSelectedCountries([...selectedCountriesProp, selectedCountry]); // Llamamos a la función de callback del padre\n  };\n\n  console.log(selectedCountries);\n  const filteredCountries = validCountries.filter(country => selectedContinents.length === 0 || selectedContinents.includes(country.continent));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stlSC.gnrCont,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: stlSC.divContinents,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Continents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: stlSC.divContinentsUnit,\n        children: continents.map(continent => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: stlSC.boxContinents,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedContinents.includes(continent),\n            onChange: () => handleContinentChange(continent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: continent\n          }, continent, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: stlSC.divCountries,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: stlSC.countBox,\n        children: filteredCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: stlSC.miniBox,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedCountries.includes(country.name),\n            onChange: () => handleCountrySelection(country.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectCountries, \"QbT+EAAY8bMg4v2NWdZAzsac5mk=\");\n_c = SelectCountries;\nexport default SelectCountries;\nvar _c;\n$RefreshReg$(_c, \"SelectCountries\");","map":{"version":3,"names":["React","useState","continents","validCountries","stlSC","jsxDEV","_jsxDEV","SelectCountries","selectedCountriesProp","setSelectedCountriesProp","updateSelectedCountries","_s","selectedContinents","setSelectedContinents","selectedCountries","setSelectedCountries","handleContinentChange","continent","includes","filter","c","handleCountrySelection","event","selectedCountry","target","value","console","log","filteredCountries","country","length","className","gnrCont","children","divContinents","fileName","_jsxFileName","lineNumber","columnNumber","divContinentsUnit","map","boxContinents","type","checked","onChange","divCountries","countBox","index","miniBox","name","_c","$RefreshReg$"],"sources":["D:/Henry/PI_Countries/PIFRONT_COUNTRIES_PT12B/PIFront/client/src/components/SelectCountries/SelectCountries.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { continents, validCountries } from \"../../vallidations/contries\"; // Actualizamos el nombre de la variable.\r\nimport stlSC from \"./SelectCountries.module.css\";\r\n// const SelectCountries = ({ selectedCountries, setSelectedCountries, updateSelectedCountries }) => {\r\nconst SelectCountries = ({ selectedCountriesProp, setSelectedCountriesProp, updateSelectedCountries }) => {\r\n  const [selectedContinents, setSelectedContinents] = useState([]);\r\n  const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n  const handleContinentChange = (continent) => {\r\n    if (selectedContinents.includes(continent)) {\r\n      setSelectedContinents(selectedContinents.filter((c) => c !== continent));\r\n    } else {\r\n      setSelectedContinents([...selectedContinents, continent]);\r\n    }\r\n  };\r\n\r\n  const handleCountrySelection = (event) => {\r\n    const selectedCountry = event.target.value;\r\n    setSelectedCountriesProp([...selectedCountriesProp, selectedCountry]);\r\n    updateSelectedCountries([...selectedCountriesProp, selectedCountry]); // Llamamos a la función de callback del padre\r\n  };\r\n\r\n  console.log(selectedCountries);\r\n\r\n  const filteredCountries = validCountries.filter(\r\n    (country) =>\r\n      selectedContinents.length === 0 ||\r\n      selectedContinents.includes(country.continent)\r\n  );\r\n\r\n  return (\r\n    <div className={stlSC.gnrCont}>\r\n      <div className={stlSC.divContinents}>\r\n        <h2>Continents</h2>\r\n        <div className={stlSC.divContinentsUnit}>\r\n          {continents.map((continent) => (\r\n            <div className={stlSC.boxContinents}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedContinents.includes(continent)}\r\n                onChange={() => handleContinentChange(continent)}\r\n              />\r\n              <label key={continent}>{continent}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={stlSC.divCountries}>\r\n        <h2>Countries</h2>\r\n        <div className={stlSC.countBox}>\r\n          {filteredCountries.map((country, index) => (\r\n            <div className={stlSC.miniBox} key={index}>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedCountries.includes(country.name)}\r\n                onChange={() => handleCountrySelection(country.name)}\r\n              />\r\n              <label>{country.name}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectCountries;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}