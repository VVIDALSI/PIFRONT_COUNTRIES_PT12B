{"ast":null,"code":"var _jsxFileName = \"D:\\\\Henry\\\\PI_Countries\\\\PIFRONT_COUNTRIES_PT12B\\\\PIFront\\\\client\\\\src\\\\components\\\\SelectCountries\\\\SelectCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { continents, validCountries } from \"../../vallidations/contries\"; // Actualizamos el nombre de la variable.\nimport stlSC from \"./SelectCountries.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectCountries = () => {\n  _s();\n  const [selectedContinents, setSelectedContinents] = useState([]);\n  const [selectedCountries, setSelectedCountries] = useState([]);\n  const handleContinentChange = continent => {\n    if (selectedContinents.includes(continent)) {\n      setSelectedContinents(selectedContinents.filter(c => c !== continent));\n    } else {\n      setSelectedContinents([...selectedContinents, continent]);\n    }\n  };\n  const handleCountryChange = country => {\n    if (selectedCountries.includes(country)) {\n      setSelectedCountries(selectedCountries.filter(c => c !== country));\n    } else {\n      setSelectedCountries([...selectedCountries, country]);\n    }\n  };\n  const filteredCountries = validCountries.filter(country => selectedContinents.length === 0 || selectedContinents.includes(country.continent));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stlSC.gnrCont,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Continents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), continents.map(continent => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedContinents.includes(continent),\n          onChange: () => handleContinentChange(continent)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), continent]\n      }, continent, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Countries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: stlSC.countBox,\n        children: filteredCountries.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: stlSC.miniBox,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedCountries.includes(country.name),\n              onChange: () => handleCountryChange(country.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), country.name]\n          }, country.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectCountries, \"QbT+EAAY8bMg4v2NWdZAzsac5mk=\");\n_c = SelectCountries;\nexport default SelectCountries;\nvar _c;\n$RefreshReg$(_c, \"SelectCountries\");","map":{"version":3,"names":["React","useState","continents","validCountries","stlSC","jsxDEV","_jsxDEV","SelectCountries","_s","selectedContinents","setSelectedContinents","selectedCountries","setSelectedCountries","handleContinentChange","continent","includes","filter","c","handleCountryChange","country","filteredCountries","length","className","gnrCont","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","countBox","miniBox","name","_c","$RefreshReg$"],"sources":["D:/Henry/PI_Countries/PIFRONT_COUNTRIES_PT12B/PIFront/client/src/components/SelectCountries/SelectCountries.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { continents, validCountries } from \"../../vallidations/contries\"; // Actualizamos el nombre de la variable.\r\nimport stlSC from \"./SelectCountries.module.css\";\r\n\r\nconst SelectCountries = () => {\r\n  const [selectedContinents, setSelectedContinents] = useState([]);\r\n  const [selectedCountries, setSelectedCountries] = useState([]);\r\n\r\n  const handleContinentChange = (continent) => {\r\n    if (selectedContinents.includes(continent)) {\r\n      setSelectedContinents(selectedContinents.filter((c) => c !== continent));\r\n    } else {\r\n      setSelectedContinents([...selectedContinents, continent]);\r\n    }\r\n  };\r\n\r\n  const handleCountryChange = (country) => {\r\n    if (selectedCountries.includes(country)) {\r\n      setSelectedCountries(selectedCountries.filter((c) => c !== country));\r\n    } else {\r\n      setSelectedCountries([...selectedCountries, country]);\r\n    }\r\n  };\r\n\r\n  const filteredCountries = validCountries.filter(\r\n    (country) =>\r\n      selectedContinents.length === 0 ||\r\n      selectedContinents.includes(country.continent)\r\n  );\r\n\r\n  return (\r\n    <div className={stlSC.gnrCont}>\r\n      <div>\r\n        <h2>Continents</h2>\r\n        {continents.map((continent) => (\r\n          <label key={continent}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedContinents.includes(continent)}\r\n              onChange={() => handleContinentChange(continent)}\r\n            />\r\n            {continent}\r\n          </label>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Countries</h2>\r\n        <div className={stlSC.countBox}>\r\n          {filteredCountries.map((country) => (\r\n            <div className={stlSC.miniBox}>\r\n              <label key={country.name}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedCountries.includes(country.name)}\r\n                  onChange={() => handleCountryChange(country.name)}\r\n                />\r\n                {country.name}\r\n              </label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectCountries;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}