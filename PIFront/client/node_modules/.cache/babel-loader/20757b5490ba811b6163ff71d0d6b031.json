{"ast":null,"code":"var _jsxFileName = \"D:\\\\Henry\\\\PI_Countries\\\\PIFront\\\\client\\\\src\\\\components\\\\Countries\\\\Countries.jsx\",\n  _s = $RefreshSig$();\n//Common\nimport Country from \"../Country/Country\";\nimport { getCountries } from '../../redux/actions';\n\n//React\nimport React, { useEffect, useState } from \"react\";\n\n//React-Redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//Redux\n\n//Components\n\n//CSS\nimport stlCountries from \"../Countries/Countries.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countries = () => {\n  _s();\n  const countries = useSelector(state => state.countries);\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(0);\n  useEffect(() => {\n    dispatch(getCharacters());\n  }, []);\n\n  //aqui paginado\n  const handleNext = () => {\n    // Avanzamos a la siguiente página solo si no estamos en la última página\n    if (currentPage < characters.length / 2 - 1) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n  const handlePrevious = () => {\n    // Retrocedemos a la página anterior solo si no estamos en la primera página\n    if (currentPage > 0) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stlCountries.CountriesGnrl,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: characters.slice(currentPage * 2, currentPage * 2 + 2).map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Country, {\n          id: c.cca3,\n          name: c.name.common,\n          flag: c.flag[1],\n          region: c.region\n        }, c.cca3, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, countries.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: currentPage === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: currentPage === characters.length / 2 - 1,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Countries, \"h/JuD8jQJbZpbNhq6tfbQQs7jWA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["Country","getCountries","React","useEffect","useState","useDispatch","useSelector","stlCountries","jsxDEV","_jsxDEV","Countries","_s","countries","state","dispatch","currentPage","setCurrentPage","getCharacters","handleNext","characters","length","prevPage","handlePrevious","className","CountriesGnrl","children","slice","map","c","id","cca3","name","common","flag","region","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/Henry/PI_Countries/PIFront/client/src/components/Countries/Countries.jsx"],"sourcesContent":["//Common\r\nimport Country from \"../Country/Country\";\r\nimport { getCountries } from '../../redux/actions';\r\n\r\n//React\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n//React-Redux\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//Redux\r\n\r\n\r\n//Components\r\n\r\n//CSS\r\nimport stlCountries from \"../Countries/Countries.module.css\";\r\n\r\nconst Countries = () => {\r\n\r\n  const countries = useSelector((state) => state.countries);\r\n  const dispatch = useDispatch();\r\n\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCharacters());\r\n  }, []);\r\n\r\n  //aqui paginado\r\n  const handleNext = () => {\r\n    // Avanzamos a la siguiente página solo si no estamos en la última página\r\n    if (currentPage < characters.length / 2 - 1) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    // Retrocedemos a la página anterior solo si no estamos en la primera página\r\n    if (currentPage > 0) {\r\n      setCurrentPage((prevPage) => prevPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={stlCountries.CountriesGnrl}>\r\n      <div>\r\n        {/* Mostramos los dos personajes correspondientes a la página actual */}\r\n        {characters\r\n          .slice(currentPage * 2, currentPage * 2 + 2)\r\n          .map((c) => (\r\n            <div key={countries.id}>\r\n              <Country key={c.cca3} id={c.cca3} name={c.name.common} flag={c.flag[1]} region={c.region} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div>\r\n        <button onClick={handlePrevious} disabled={currentPage === 0}>\r\n          Previous\r\n        </button>\r\n        <button onClick={handleNext} disabled={currentPage === characters.length / 2 - 1}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}