{"ast":null,"code":"var _jsxFileName = \"D:\\\\Henry\\\\PI_Countries\\\\PIFRONT_COUNTRIES_PT12B\\\\PIFront\\\\client\\\\src\\\\components\\\\Countries\\\\Countries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries, getActivities, setSelectedActivity } from \"../../redux/actions/index\";\nimport Country from \"../Country/Country\";\nimport stlCountries from \"../Countries/Countries.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countries = () => {\n  _s();\n  const allCountries = useSelector(state => state.countries);\n  const selectedContinent = useSelector(state => state.selectedContinent);\n  const selectedSortType = useSelector(state => state.sortType);\n  const activities = useSelector(state => state.activities.findAllActivities);\n  const selectedActivity = useSelector(state => state.selectedActivity);\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(0);\n  console.log(\"Activities:\", activities);\n  useEffect(() => {\n    dispatch(getCountries());\n    dispatch(getActivities());\n  }, [dispatch]);\n  const countriesPerPage = 10;\n\n  // Filtrar los países según el continente seleccionado\n  const filteredCountries = allCountries.filter(country => {\n    const continentMatches = selectedContinent === \"All\" || country.continent === selectedContinent;\n    const activityMatches = selectedActivity === \"\" || country.activities.includes(selectedActivity);\n    return continentMatches && activityMatches;\n  });\n\n  // Realizar el ordenamiento de los países según el tipo seleccionado\n  const sortedCountries = [...filteredCountries]; // Crear una copia para no modificar el estado original\n\n  switch (selectedSortType) {\n    case \"ascendantAlf\":\n      sortedCountries.sort((a, b) => a.name.localeCompare(b.name));\n      break;\n    case \"descendingAlf\":\n      sortedCountries.sort((a, b) => b.name.localeCompare(a.name));\n      break;\n    case \"asendingPob\":\n      sortedCountries.sort((a, b) => a.population - b.population);\n      break;\n    case \"descendingPob\":\n      sortedCountries.sort((a, b) => b.population - a.population);\n      break;\n    default:\n      break;\n  }\n  const totalPages = Math.ceil(sortedCountries.length / countriesPerPage);\n  const handleNext = () => {\n    if (currentPage < totalPages - 1) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentPage > 0) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n  const handleActivityChange = event => {\n    const selectedActivity = event.target.value;\n    dispatch(setSelectedActivity(selectedActivity));\n    // Reset the current page to the first page when changing the activity filter\n    setCurrentPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: stlCountries.CountriesGnrl,\n      children: sortedCountries.slice(currentPage * countriesPerPage, (currentPage + 1) * countriesPerPage).map(c => /*#__PURE__*/_jsxDEV(Country, {\n        id: c.id,\n        name: c.name,\n        flag: c.flag,\n        region: c.subregion,\n        population: c.population\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"FilterByActivity\",\n        children: \"Filter by activity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"activity\",\n        value: selectedActivity,\n        onChange: handleActivityChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), activities.map(activity => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: activity.name,\n          children: activity.name\n        }, activity.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: stlCountries.btnprev,\n        onClick: handlePrevious,\n        disabled: currentPage === 0,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: stlCountries.btnpot,\n        children: [\"Page \", currentPage + 1, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: stlCountries.btnnext,\n        onClick: handleNext,\n        disabled: currentPage === totalPages - 1,\n        children: \"\\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Countries, \"u3JGZ2gceaqBF3tFxvkeYHLUbyA=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","getCountries","getActivities","setSelectedActivity","Country","stlCountries","jsxDEV","_jsxDEV","Countries","_s","allCountries","state","countries","selectedContinent","selectedSortType","sortType","activities","findAllActivities","selectedActivity","dispatch","currentPage","setCurrentPage","console","log","countriesPerPage","filteredCountries","filter","country","continentMatches","continent","activityMatches","includes","sortedCountries","sort","a","b","name","localeCompare","population","totalPages","Math","ceil","length","handleNext","prevPage","handlePrevious","handleActivityChange","event","target","value","children","className","CountriesGnrl","slice","map","c","id","flag","region","subregion","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","activity","btnprev","onClick","disabled","btnpot","btnnext","_c","$RefreshReg$"],"sources":["D:/Henry/PI_Countries/PIFRONT_COUNTRIES_PT12B/PIFront/client/src/components/Countries/Countries.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getCountries,\r\n  getActivities,\r\n  setSelectedActivity,\r\n} from \"../../redux/actions/index\";\r\nimport Country from \"../Country/Country\";\r\nimport stlCountries from \"../Countries/Countries.module.css\";\r\n\r\nconst Countries = () => {\r\n  const allCountries = useSelector((state) => state.countries);\r\n  const selectedContinent = useSelector((state) => state.selectedContinent);\r\n  const selectedSortType = useSelector((state) => state.sortType);\r\n  const activities = useSelector((state) => state.activities.findAllActivities);\r\n  const selectedActivity = useSelector((state) => state.selectedActivity);\r\n  const dispatch = useDispatch();\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  console.log(\"Activities:\", activities);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCountries());\r\n    dispatch(getActivities());\r\n  }, [dispatch]);\r\n\r\n  const countriesPerPage = 10;\r\n\r\n  // Filtrar los países según el continente seleccionado\r\n  const filteredCountries = allCountries.filter((country) => {\r\n    const continentMatches =\r\n      selectedContinent === \"All\" || country.continent === selectedContinent;\r\n    const activityMatches =\r\n      selectedActivity === \"\" || country.activities.includes(selectedActivity);\r\n    return continentMatches && activityMatches;\r\n  });\r\n\r\n  // Realizar el ordenamiento de los países según el tipo seleccionado\r\n  const sortedCountries = [...filteredCountries]; // Crear una copia para no modificar el estado original\r\n\r\n  switch (selectedSortType) {\r\n    case \"ascendantAlf\":\r\n      sortedCountries.sort((a, b) => a.name.localeCompare(b.name));\r\n      break;\r\n    case \"descendingAlf\":\r\n      sortedCountries.sort((a, b) => b.name.localeCompare(a.name));\r\n      break;\r\n    case \"asendingPob\":\r\n      sortedCountries.sort((a, b) => a.population - b.population);\r\n      break;\r\n    case \"descendingPob\":\r\n      sortedCountries.sort((a, b) => b.population - a.population);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const totalPages = Math.ceil(sortedCountries.length / countriesPerPage);\r\n\r\n  const handleNext = () => {\r\n    if (currentPage < totalPages - 1) {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentPage > 0) {\r\n      setCurrentPage((prevPage) => prevPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleActivityChange = (event) => {\r\n    const selectedActivity = event.target.value;\r\n    dispatch(setSelectedActivity(selectedActivity));\r\n    // Reset the current page to the first page when changing the activity filter\r\n    setCurrentPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={stlCountries.CountriesGnrl}>\r\n        {sortedCountries\r\n          .slice(\r\n            currentPage * countriesPerPage,\r\n            (currentPage + 1) * countriesPerPage\r\n          )\r\n          .map((c) => (\r\n            <Country\r\n              key={c.id}\r\n              id={c.id}\r\n              name={c.name}\r\n              flag={c.flag}\r\n              region={c.subregion}\r\n              population={c.population}\r\n            />\r\n          ))}\r\n      </div>\r\n\r\n      <div>\r\n        <label htmlFor=\"FilterByActivity\">Filter by activity: </label>\r\n        <select\r\n          id=\"activity\"\r\n          value={selectedActivity}\r\n          onChange={handleActivityChange}\r\n        >\r\n          <option value=\"\">All</option>\r\n          {activities.map((activity) => (\r\n            <option key={activity.id} value={activity.name}>\r\n              {activity.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div>\r\n        <button\r\n          className={stlCountries.btnprev}\r\n          onClick={handlePrevious}\r\n          disabled={currentPage === 0}\r\n        >\r\n          ←\r\n        </button>\r\n        <button className={stlCountries.btnpot}>\r\n          Page {currentPage + 1} of {totalPages}\r\n        </button>\r\n        <button\r\n          className={stlCountries.btnnext}\r\n          onClick={handleNext}\r\n          disabled={currentPage === totalPages - 1}\r\n        >\r\n          →\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}