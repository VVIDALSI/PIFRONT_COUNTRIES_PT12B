{"ast":null,"code":"import { validCountries } from \"./contries\";\n\n// Valida que el campo \"tour\" no esté vacío\nexport const validateTour = tour => {\n  tour = tour.trim();\n  if (tour.length === 0) {\n    return \"Tour Name is required.\";\n  } else if (tour.length > 14) {\n    return \"Tour Name must be at most 14 characters long.\";\n  }\n  if (/^\\d+$/.test(tour)) {\n    return \"Tour Name cannot consist of only numbers.\";\n  }\n  return true;\n};\n\n// Valida que el campo \"duration\" sea un número entero positivo\nexport const validateDuration = duration => {\n  return /^[1-9][0-9]*$/.test(duration);\n};\n\n// Valida que cada campo de país no esté vacío y sea un país válido\nexport const validateCountries = countries => {\n  return countries.every(country => {\n    const trimmedCountry = country.trim();\n    return trimmedCountry !== \"\" && validCountries.includes(trimmedCountry);\n  });\n};","map":{"version":3,"names":["validCountries","validateTour","tour","trim","length","test","validateDuration","duration","validateCountries","countries","every","country","trimmedCountry","includes"],"sources":["D:/Henry/PI_Countries/PIFRONT_COUNTRIES_PT12B/PIFront/client/src/vallidations/vallidations.js"],"sourcesContent":["import { validCountries } from \"./contries\";\r\n\r\n// Valida que el campo \"tour\" no esté vacío\r\nexport const validateTour = (tour) => {\r\n  tour = tour.trim();\r\n\r\n  if (tour.length === 0) {\r\n    return \"Tour Name is required.\";\r\n  } else if (tour.length > 14) {\r\n    return \"Tour Name must be at most 14 characters long.\";\r\n  }\r\n\r\n  if (/^\\d+$/.test(tour)) {\r\n    return \"Tour Name cannot consist of only numbers.\";\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n// Valida que el campo \"duration\" sea un número entero positivo\r\nexport const validateDuration = (duration) => {\r\n  return /^[1-9][0-9]*$/.test(duration);\r\n};\r\n\r\n// Valida que cada campo de país no esté vacío y sea un país válido\r\nexport const validateCountries = (countries) => {\r\n  return countries.every((country) => {\r\n    const trimmedCountry = country.trim();\r\n    return trimmedCountry !== \"\" && validCountries.includes(trimmedCountry);\r\n  });\r\n};"],"mappings":"AAAA,SAASA,cAAc,QAAQ,YAAY;;AAE3C;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpCA,IAAI,GAAGA,IAAI,CAACC,IAAI,CAAC,CAAC;EAElB,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO,wBAAwB;EACjC,CAAC,MAAM,IAAIF,IAAI,CAACE,MAAM,GAAG,EAAE,EAAE;IAC3B,OAAO,+CAA+C;EACxD;EAEA,IAAI,OAAO,CAACC,IAAI,CAACH,IAAI,CAAC,EAAE;IACtB,OAAO,2CAA2C;EACpD;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMI,gBAAgB,GAAIC,QAAQ,IAAK;EAC5C,OAAO,eAAe,CAACF,IAAI,CAACE,QAAQ,CAAC;AACvC,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAIC,SAAS,IAAK;EAC9C,OAAOA,SAAS,CAACC,KAAK,CAAEC,OAAO,IAAK;IAClC,MAAMC,cAAc,GAAGD,OAAO,CAACR,IAAI,CAAC,CAAC;IACrC,OAAOS,cAAc,KAAK,EAAE,IAAIZ,cAAc,CAACa,QAAQ,CAACD,cAAc,CAAC;EACzE,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}