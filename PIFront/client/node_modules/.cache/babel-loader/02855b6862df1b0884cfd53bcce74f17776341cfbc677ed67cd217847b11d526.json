{"ast":null,"code":"var _jsxFileName = \"D:\\\\Henry\\\\PI_Countries\\\\PIFRONT_COUNTRIES_PT12B\\\\PIFront\\\\client\\\\src\\\\components\\\\SearchBar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport stlSB from './SearchBar.module.css';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport stlMdl from '../SearchBar/modalStyles.module.css';\n\n// Importa la lista de países desde countries.js\nimport countriesList from './countries'; // Asegúrate de que la ruta sea correcta\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const allCountries = useSelector(state => state.countries);\n  const navigate = useNavigate();\n  const [searchInput, setSearchInput] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [suggestions, setSuggestions] = useState([]);\n  const handleSearch = () => {\n    const countryById = allCountries.find(country => country.id === searchInput);\n    if (countryById) {\n      navigate(`/detail/${countryById.id}`);\n    } else {\n      const countryByName = allCountries.find(country => country.name.toLowerCase() === searchInput.toLowerCase());\n      if (countryByName) {\n        navigate(`/detail/${countryByName.id}`);\n      } else {\n        setShowModal(true);\n      }\n    }\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setSearchInput(value);\n\n    // Filtra la lista de países y obtén las sugerencias para el autocompletado\n    const filteredSuggestions = countriesList.filter(country => country.name.toLowerCase().includes(value.toLowerCase()));\n    setSuggestions(filteredSuggestions);\n  };\n  const handleSuggestionClick = suggestion => {\n    setSearchInput(suggestion.name);\n    setSuggestions([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: stlSB.gnrlContSB,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchInput,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: stlSB.suggestionsList,\n      children: suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSuggestionClick(suggestion),\n        children: suggestion.name\n      }, suggestion.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: stlMdl.gnrMdl,\n      isOpen: showModal,\n      onRequestClose: closeModal,\n      contentLabel: \"Country not found\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xA1Country not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please enter a valid Id value or country name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"OE2KHl5B97OuVRfJejbAt7cUrJw=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","stlSB","useSelector","useNavigate","Modal","stlMdl","countriesList","jsxDEV","_jsxDEV","SearchBar","_s","allCountries","state","countries","navigate","searchInput","setSearchInput","showModal","setShowModal","suggestions","setSuggestions","handleSearch","countryById","find","country","id","countryByName","name","toLowerCase","closeModal","handleInputChange","e","value","target","filteredSuggestions","filter","includes","handleSuggestionClick","suggestion","className","gnrlContSB","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","suggestionsList","map","gnrMdl","isOpen","onRequestClose","contentLabel","_c","$RefreshReg$"],"sources":["D:/Henry/PI_Countries/PIFRONT_COUNTRIES_PT12B/PIFront/client/src/components/SearchBar/SearchBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport stlSB from './SearchBar.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport stlMdl from '../SearchBar/modalStyles.module.css';\r\n\r\n// Importa la lista de países desde countries.js\r\nimport countriesList from './countries'; // Asegúrate de que la ruta sea correcta\r\n\r\nconst SearchBar = () => {\r\n  const allCountries = useSelector((state) => state.countries);\r\n  const navigate = useNavigate();\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const handleSearch = () => {\r\n    const countryById = allCountries.find((country) => country.id === searchInput);\r\n\r\n    if (countryById) {\r\n      navigate(`/detail/${countryById.id}`);\r\n    } else {\r\n      const countryByName = allCountries.find(\r\n        (country) => country.name.toLowerCase() === searchInput.toLowerCase()\r\n      );\r\n\r\n      if (countryByName) {\r\n        navigate(`/detail/${countryByName.id}`);\r\n      } else {\r\n        setShowModal(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setSearchInput(value);\r\n\r\n    // Filtra la lista de países y obtén las sugerencias para el autocompletado\r\n    const filteredSuggestions = countriesList.filter((country) =>\r\n      country.name.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n\r\n    setSuggestions(filteredSuggestions);\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setSearchInput(suggestion.name);\r\n    setSuggestions([]);\r\n  };\r\n\r\n  return (\r\n    <div className={stlSB.gnrlContSB}>\r\n      <input\r\n        type=\"text\"\r\n        value={searchInput}\r\n        onChange={handleInputChange}\r\n      />\r\n\r\n      <button onClick={handleSearch}>Find</button>\r\n\r\n      {/* Autocompletado */}\r\n      {suggestions.length > 0 && (\r\n        <ul className={stlSB.suggestionsList}>\r\n          {suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion.id}\r\n              onClick={() => handleSuggestionClick(suggestion)}\r\n            >\r\n              {suggestion.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {/* Modal para mostrar el mensaje */}\r\n      <Modal\r\n        className={stlMdl.gnrMdl}\r\n        isOpen={showModal}\r\n        onRequestClose={closeModal}\r\n        contentLabel=\"Country not found\"\r\n      >\r\n        <h2>¡Country not found!</h2>\r\n        <h3>Please enter a valid Id value or country name</h3>\r\n        <button onClick={closeModal}>Accept</button>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}